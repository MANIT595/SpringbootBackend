spring.application.name=user-service
server.port=8083
#
spring.datasource.url=jdbc:mysql://localhost:3306/microservices
spring.datasource.username=root
spring.datasource.password=
spring.jpa.hibernate.ddl-auto=update
#
#
logging.file.name=user_service.logs
logging.level.root = info

management.endpoints.web.base-path=/actuator
management.prometheus.metrics.export.enabled=true
management.metrics.export.prometheus.scrape.enabled=true

management.endpoints.web.exposure.include=*
management.info.env.enabled=true
management.metrics.enable.cache=true
management.endpoint.prometheus.enabled=true

management.endpoint.shutdown.enabled=true

spring.mvc.cors.allowed-origins=http://localhost:3000
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.mvc.cors.allowed-headers=*
spring.mvc.cors.allow-credentials=true

#to add info to info actuator endpoint
info.app.name=SpringBoot User Service
info.app.description= User Microserice to perform CRUD operations on User Resource
info.app.version =1.0v
#
#to add health actuator endpoint
management.endpoint.health.show-details=always

spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.cache.type=redis
spring.cache.redis.enable-statistics=true
management.metrics.enable.redis=true
spring.cache.redis.time-to-live=1m


eureka.instance.client.serverUrl.defaultZone = http://localhost:8761/eureka/

#spring.rabbitmq.host=localhost
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest
#
#spring.config.import=optional:configserver:http://localhost:8888


# Zipkin server URL
#spring.zipkin.base-url=http://localhost:9411
#spring.sleuth.sampler.probability=1.0
# Set to 1.0 to sample all requests


#adding micrometer instead of sleuth
management.tracing.sampling.probability=1.0
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
logging.level.org.springframework.web=INFO
#
## Actuator endpoints for Circuit Breaker
#management.health.circuitbreakers.enabled=true
#management.endpoints.web.exposure.include=health
#management.endpoint.health.show-details=always

## Circuit Breaker configuration
#resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.registerHealthIndicator=true
#resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.failureRateThreshold=50
#resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.minimumNumberOfCalls=5
#resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.automaticTransitionFromOpenToHalfOpenEnabled=true
#resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.waitDurationInOpenState=5s
#resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.permittedNumberOfCallsInHalfOpenState=3
#resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.slidingWindowSize=10
#resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.slidingWindowType=COUNT_BASED
#
## Retry configuration
#resilience4j.retry.instances.EMPLOYEE-SERVICE.registerHealthIndicator=true
#resilience4j.retry.instances.EMPLOYEE-SERVICE.maxRetryAttempts=5
#resilience4j.retry.instances.EMPLOYEE-SERVICE.waitDuration=2s